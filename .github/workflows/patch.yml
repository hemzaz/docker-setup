name: Patch

on:
  schedule:
    - cron: "0 2 * * *"
    - cron: "*/10 * * * *"

jobs:

  prepare:
    name: Prepare
    runs-on: ubuntu-20.04
    outputs:
      branches: ${{ steps.branches.outputs.branches }}
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Collect branches
        id: branches
        run: |
          branches="$(
              git branch -r \
              | grep -E "origin/v[0-9]+\.[0-9]+" \
              | tr -d ' ' \
              | cut -d/ -f2 \
              | jq --null-input --raw-input --compact-output '[inputs]'
          )"
          echo "Found branches: ${branches}."
          echo "::set-output name=branches::${branches}"

  patch:
    name: patch
    needs:
    - prepare
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.prepare.outputs.branches) }}
    runs-on: ubuntu-latest
    steps:

    - name: Install tools
      env:
        SEMVER_VERSION: 3.3.0
      run: |
        curl -sLo /usr/local/bin/semver "https://github.com/fsaintjacques/semver-tool/raw/${SEMVER_VERSION}/src/semver"
        chmod +x /usr/local/bin/semver

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ matrix.branch }}
        fetch-depth: "0"

    - name: Get info
      id: info
      run: |
        sha="$(git rev-parse HEAD)"
        echo "Running on commit ${sha} for $(git describe)"
        tag="$(git describe --tags --abbrev=0)"
        updates="$(git log "${tag}.." --author=".*bot@renovateapp.com.*" --oneline | wc -l)"
        echo "Found ${updates} update(s) since tag ${tag}"
        echo "::set-output name=sha::${sha}"
        echo "::set-output name=tag::${tag}"
        echo "::set-output name=updates::${updates}"

    - name: Bump tag
      id: bump
      if: ${{ steps.info.outputs.updates > 0 }}
      run: |
        new_tag="$(semver bump patch "${{ steps.info.outputs.tag }}")"
        echo "Bumped ${{ steps.info.outputs.tag }} to ${new_tag}"
        echo "::set-output name=tag::${new_tag}"

    - name: Create tag
      if: ${{ steps.info.outputs.updates > 0 }}
      run: |
        echo "Creating tag v${{ steps.bump.outputs.tag }} for sha ${{ steps.info.outputs.sha }}"
        curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/git/refs" \
            --silent \
            --fail \
            --header "Authorization: token ${{ secrets.BOT_GITHUB_TOKEN }}" \
            --data '{"ref": "refs/tags/v${{ steps.bump.outputs.tag }}", "sha": "${{ steps.info.outputs.sha }}"}'
